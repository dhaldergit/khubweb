/*
 * This java source file is generated by DAO4J v1.19
 * Generated on Wed Oct 05 14:36:07 IST 2016
 * For more information, please contact b-i-d@163.com
 * Please check http://sourceforge.net/projects/dao4j/ for the latest version.
 */

package com.ibm.khub.dao;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.springframework.jdbc.core.JdbcTemplate;

import com.ibm.khub.pojo.KhContent;
import com.ibm.khub.pojo.KhContentKey;

/**
 * This interface provides methods to populate DB Table of KH_CONTENT
 */
public interface KhContentDAO {
    /**
     * Create a new record in Database.
     * @param bean   The Object to be inserted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void create(KhContent bean, JdbcTemplate jdbcTemplate) throws SQLException;

    /**
     * Retrive a record from Database.
     * @param beanKey   The PK Object to be retrived.
     * @param conn      JDBC Connection.
     * @exception       SQLException if something is wrong.
     */
    public KhContent load(KhContentKey key, Connection conn) throws SQLException;

    /**
     * Update a record in Database.
     * @param bean   The Object to be saved.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void update(KhContent bean, JdbcTemplate jdbcTemplate) throws SQLException;

    /**
     * Create a new record in Database.
     * @param bean   The PK Object to be deleted.
     * @param conn   JDBC Connection.
     * @exception    SQLException if something is wrong.
     */
    public void delete(KhContentKey key, JdbcTemplate jdbcTemplate) throws SQLException;
    
    void insertBulkContent(final List<KhContent> proposalList);
    
    public List<KhContent> retrieveContents(String selectedServiceLine, String selectedGeo, List<String> selectedIndustryList,
			List<String> selectedGrowthList, String type, String maxDate, String minDate, String competitor);
    
    public Map<String, String> retrieveDateRange(String type);
    
    public long getKeyFromSerial(long serial, JdbcTemplate jdbcTemplate) throws SQLException;
    
    public long generateSerial(String type, JdbcTemplate jdbcTemplate) throws SQLException;
    
}